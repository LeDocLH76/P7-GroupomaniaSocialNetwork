generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comments {
  id        Int      @id @default(autoincrement())
  body      String?
  picture   Int?
  link      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  postId    Int
  usersId   Int
  posts     posts    @relation(fields: [postId], references: [id], onDelete: Cascade)
  users     users    @relation(fields: [usersId], references: [id], onDelete: Cascade)
}

model posts {
  id        Int        @id @default(autoincrement())
  body      String?
  picture   Int?
  link      String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  like      Int        @default(0)
  dislike   Int        @default(0)
  userId    Int        @unique
  users     users      @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments  comments[]
}

model profils {
  id        Int      @id @default(autoincrement())
  firstName String   @db.VarChar(50)
  lastName  String   @db.VarChar(50)
  picture   Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int      @unique
  user      users    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model users {
  id       Int            @id @default(autoincrement())
  pseudo   String         @unique @db.VarChar(50)
  avatar   Bytes?
  email    String         @unique @db.VarChar(255)
  password String         @db.VarChar(255)
  role     user_role_enum @default(user)
  comments comments[]
  posts    posts?
  profils  profils?
}

model session {
  id        String   @id
  sid       String   @unique
  sess      String
  expiresAt DateTime

  @@index([expiresAt], map: "IDX_session_expireAt")
}

enum user_role_enum {
  user
  admin
}
